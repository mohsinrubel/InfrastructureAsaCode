Infrastructure as code (IaC) means to manage your IT infrastructure using configuration files.
Historically, managing IT infrastructure was a manual process. People would physically put servers in place and configure them. Only after the
machines were configured to the correct settings required by the OS and dependencies would those people deploy the application.
To meet customer demands and save costs, application teams are architecting their applications to support a much higher level of elasticity,
supporting technology like containers and public cloud resources. These resources may only live for a matter of hours; therefore the traditional
method of raising a ticket to request resources is no longer a viable option.

Benefits of IAC:
- Speed : IAC speeds comapny's IT infrastricture for provisioning and maintaining all the resources

- Consistancy : Since it is code, it generates the same result every time. It provisioned the same environment every time, enabling improved infrastructure
consistency at all times.

- Cost : With everything automated and organized,
engineers save up on time and cost which can be wisely invested in performing other manual tasks and higher-value jobs.

- Minimum Risk: IaC allows server configuration that can be documented, logged, and tracked later for reference. Configuration files will be reviewed by a person
or policy as a code (sentinel) for security leakages.

- Everything Codified : The main benefit of IaC is explicit coding to configure files in use. You can share codes with the team, test them to ensure accuracy, maintain
uniformity and update your infrastructure into the same flow of IaC.

- Version controlled and Integrated : Since the infrastructure configurations are codified, we can check-in into version control like GitHub and start versioning it.
IaC allows you to track and give insight on what, who, when, and why anything changed in the process of deployment. This has more
transparency which we lack in traditional infrastructure management.
